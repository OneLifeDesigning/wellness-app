{"version":3,"sources":["context/DataContext.jsx","apiclient/index.js","components/FormAddKey.jsx","components/EditableTable.jsx","hooks/useFetchWithLoading.js","components/layout/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","useDataContext","useContext","DataContextProvider","children","useState","value","data","setData","Provider","http","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","interceptors","response","use","error","status","localStorage","clear","window","location","assign","Promise","reject","getAll","get","patchOne","id","body","patch","FormAddKey","props","handleSubmit","handleAdd","serializeForm","a","form","validateFields","Object","values","some","setError","setTimeout","Form","useForm","style","marginBottom","message","type","display","justifyContent","width","backgroundColor","margin","padding","Item","marginRight","onClick","danger","shape","icon","CloseOutlined","name","placeholder","green","borderColor","color","SaveOutlined","EditableCell","editing","dataIndex","title","inputType","record","index","restProps","min","EditableTable","editingKey","setEditingKey","addKey","setAddKey","isEditing","handleCancel","handleDelete","newData","filter","item","delete","deleteOne","prev","newEntry","post","returnedData","moment","date","format","unshift","handleSave","row","findIndex","splice","push","console","log","mergedColumns","editable","key","sorter","compare","b","Date","Number","hours","consumition","price","cost","render","_","onConfirm","DeleteOutlined","disabled","setFieldsValue","edit","EditOutlined","map","col","onCell","marginTop","component","components","cell","rowKey","bordered","dataSource","columns","rowClassName","pagination","onChange","useFetchWithLoading","fetchFn","params","loading","state","setState","useEffect","then","catch","Spinner","textAlign","LoadingOutlined","fontSize","blue","App","className","minHeight","alignContent","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de77eac1.chunk.js","sourcesContent":["import React, { useState, createContext, useContext } from \"react\";\n\nconst DataContext = createContext();\n\nexport const useDataContext = () => useContext(DataContext);\n\nexport const DataContextProvider = ({ children }) => {\n  const [data, setData] = useState(null);\n\n  const value = { data, setData };\n\n  return <DataContext.Provider value={value}>{children}</DataContext.Provider>;\n};\n","import axios from \"axios\";\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3010/\",\n  withCredentials: true,\n});\n\nhttp.interceptors.response.use(\n  function (response) {\n    return response.data;\n  },\n  function (error) {\n    if (error.response?.status === 401) {\n      localStorage.clear();\n      window.location.assign(\"/\");\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport const createOne = (body) => http.post(\"/data/\", body);\nexport const getAll = () => http.get(\"/data\");\nexport const patchOne = (id, body) => http.patch(`/data/${id}`, body);\nexport const deleteOne = (id) => http.delete(`/data/${id}`);\n","import React, { useState } from \"react\";\nimport { Form, Button, Input, InputNumber, Alert } from \"antd\";\nimport { SaveOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { green } from \"@ant-design/colors\";\n\nconst FormAddKey = (props) => {\n  const { handleSubmit, handleAdd } = props;\n  const serializeForm = async () => {\n    const data = await form.validateFields();\n    const error = Object.values(data).some((value) => !value);\n    !error ? handleSubmit(data) : setError(error);\n    setTimeout(() => {\n      setError(false);\n    }, 3500);\n  };\n  const [error, setError] = useState(false);\n  const [form] = Form.useForm();\n  return (\n    <div>\n      {error && (\n        <Alert\n          style={{ marginBottom: 5 }}\n          message=\"All inputs is required\"\n          type=\"error\"\n        />\n      )}\n      <Form\n        form={form}\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          backgroundColor: \"#eaeaea\",\n          margin: 0,\n          padding: 10,\n        }}\n      >\n        <Form.Item\n          style={{\n            marginBottom: 0,\n            marginRight: 5,\n          }}\n        >\n          <Button\n            onClick={handleAdd}\n            type=\"dashed\"\n            danger\n            shape=\"circle\"\n            icon={<CloseOutlined />}\n          ></Button>\n        </Form.Item>\n        <Form.Item\n          type=\"date\"\n          name={\"date\"}\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <Input\n            placeholder=\"Date\"\n            style={{\n              width: \"95%\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"hours\"}\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <InputNumber\n            placeholder=\"Hours\"\n            style={{\n              width: \"95%\",\n              marginBottom: 0,\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"consumition\"}\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <InputNumber\n            placeholder=\"Consumition\"\n            style={{\n              width: \"95%\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"price\"}\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <InputNumber\n            placeholder=\"Price\"\n            style={{\n              width: \"95%\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name={\"cost\"}\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <InputNumber\n            placeholder=\"Cost\"\n            style={{\n              width: \"95%\",\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          style={{\n            marginBottom: 0,\n          }}\n        >\n          <Button\n            style={{\n              backgroundColor: green[6],\n              borderColor: green[6],\n              color: \"#FFF\",\n            }}\n            onClick={serializeForm}\n          >\n            <SaveOutlined /> Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default FormAddKey;\n","import React, { useState } from \"react\";\nimport { Table, Input, InputNumber, Popconfirm, Form, Button } from \"antd\";\nimport { useDataContext } from \"../context/DataContext\";\nimport { patchOne, deleteOne, createOne } from \"../apiclient\";\nimport FormAddKey from \"./FormAddKey\";\nimport moment from \"moment\";\nimport {\n  CloseOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\n\nimport { green } from \"@ant-design/colors\";\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  return (\n    <td {...restProps}>\n      {editing ? (\n        dataIndex !== \"date\" ? (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n          >\n            <InputNumber\n              min={0}\n              style={{\n                width: \"100%\",\n              }}\n            />\n          </Form.Item>\n        ) : (\n          <Form.Item\n            name={dataIndex}\n            style={{\n              margin: 0,\n            }}\n            type=\"date\"\n          >\n            <Input\n              style={{\n                width: \"100%\",\n              }}\n            />\n          </Form.Item>\n        )\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst EditableTable = () => {\n  const { data, setData } = useDataContext();\n\n  const [form] = Form.useForm();\n  const [editingKey, setEditingKey] = useState(\"\");\n  const [addKey, setAddKey] = useState(false);\n\n  const isEditing = (record) => record.id === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      date: \"\",\n      hours: \"\",\n      consumition: \"\",\n      price: \"\",\n      cost: \"\",\n      ...record,\n    });\n    setEditingKey(record.id);\n  };\n\n  const handleCancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const handleDelete = (id) => {\n    const newData = data.filter((item) => id !== item.id);\n    setData(newData);\n    deleteOne(id);\n    setEditingKey(\"\");\n  };\n\n  const handleAdd = () => {\n    setAddKey((prev) => {\n      return !prev;\n    });\n  };\n  const handleSubmit = async (newEntry) => {\n    const returnedData = await createOne(newEntry);\n    const newData = [...data];\n    returnedData.date = await moment(returnedData.date).format(\"L\");\n    newData.unshift(returnedData);\n    setEditingKey(\"\");\n    setData(newData);\n    setTimeout(() => {\n      setAddKey((prev) => {\n        return !prev;\n      });\n    }, 500);\n  };\n\n  const handleSave = async (id) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        setData(newData);\n        setEditingKey(\"\");\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey(\"\");\n      }\n      patchOne(id, row);\n    } catch (errInfo) {\n      console.log(\"Validate Failed:\", errInfo);\n    }\n  };\n\n  const columns = [\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n      width: \"16%\",\n      editable: true,\n      key: \"date\",\n      sorter: {\n        compare: (a, b) => new Date(a.date) - new Date(b.date),\n      },\n    },\n    {\n      title: \"Hours\",\n      dataIndex: \"hours\",\n      key: \"hours\",\n      width: \"12%\",\n      editable: true,\n      sorter: {\n        compare: (a, b) => Number(a.hours) - Number(b.hours),\n      },\n    },\n    {\n      title: \"Consumition\",\n      dataIndex: \"consumition\",\n      key: \"consumition\",\n      width: \"12%\",\n      editable: true,\n      sorter: {\n        compare: (a, b) => Number(a.consumition) - Number(b.consumition),\n      },\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      key: \"price\",\n      width: \"12%\",\n      editable: true,\n      sorter: {\n        compare: (a, b) => Number(a.price) - Number(b.price),\n      },\n    },\n    {\n      title: \"Cost\",\n      dataIndex: \"cost\",\n      key: \"cost\",\n      width: \"18%\",\n      editable: true,\n      sorter: {\n        compare: (a, b) => Number(a.cost) - Number(b.cost),\n      },\n    },\n    {\n      title: \"Operation\",\n      dataIndex: \"operation\",\n      key: \"operation\",\n      width: \"15%\",\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <Button\n              type=\"primary\"\n              onClick={() => handleSave(record.id)}\n              shape=\"circle\"\n              icon={<SaveOutlined />}\n              style={{\n                backgroundColor: green[6],\n                borderColor: green[6],\n                color: \"#FFF\",\n                marginRight: 5,\n              }}\n            ></Button>\n            <Popconfirm\n              title=\"Sure to delete?\"\n              onConfirm={() => handleDelete(record.id)}\n            >\n              <Button\n                type=\"danger\"\n                shape=\"circle\"\n                icon={<DeleteOutlined />}\n                style={{ marginRight: 5 }}\n              ></Button>\n            </Popconfirm>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={handleCancel}>\n              <Button\n                type=\"dashed\"\n                shape=\"circle\"\n                icon={<CloseOutlined />}\n              ></Button>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Button\n            type=\"primary\"\n            disabled={editingKey !== \"\"}\n            onClick={() => edit(record)}\n          >\n            <EditOutlined /> Edit\n          </Button>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === \"date\" ? \"date\" : \"number\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {addKey ? (\n        <div style={{ display: \"flex\", marginTop: 16, marginBottom: 16 }}>\n          <FormAddKey handleSubmit={handleSubmit} handleAdd={handleAdd} />\n        </div>\n      ) : (\n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{ marginBottom: 16, marginTop: 16 }}\n        >\n          Add a new\n        </Button>\n      )}\n\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          rowKey={(data) => data.id}\n          bordered\n          dataSource={data}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: handleCancel,\n          }}\n        />\n      </Form>\n    </div>\n  );\n};\n\nexport default EditableTable;\n","import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nconst useFetchWithLoading = (fetchFn, params) => {\n  const [state, setState] = useState({\n    loading: true,\n    data: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    fetchFn(params)\n      .then(async (data) => {\n        await data?.map((item) => (item.date = moment(item.date).format(\"L\")));\n        setState({\n          loading: false,\n          data,\n          error: null,\n        });\n      })\n      .catch((error) => {\n        setState({\n          loading: false,\n          data: null,\n          error,\n        });\n      });\n    return () => {};\n  }, [fetchFn, params]);\n  return {\n    loading: state.loading,\n    data: state.data,\n    error: state.error,\n  };\n};\n\nexport default useFetchWithLoading;\n","import React from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { blue } from \"@ant-design/colors\";\n\nconst Spinner = () => {\n  return (\n    <div style={{ width: \"100%\", textAlign: \"center\" }}>\n      <LoadingOutlined style={{ fontSize: \"80px\", color: blue[9] }} />\n      <br />\n      Cargando...\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect } from \"react\";\nimport EditableTable from \"./components/EditableTable\";\nimport { getAll } from \"./apiclient\";\n\nimport useFetchWithLoading from \"./hooks/useFetchWithLoading\";\nimport { useDataContext } from \"./context/DataContext\";\nimport Spinner from \"./components/layout/Spinner\";\nimport { Content } from \"antd/lib/layout/layout\";\n\nfunction App() {\n  const { data, loading } = useFetchWithLoading(getAll);\n  const { setData } = useDataContext();\n\n  useEffect(() => {\n    data && setData(data);\n    return () => {};\n  }, [data, setData]);\n\n  return (\n    <div className=\"App\">\n      <Content\n        style={{\n          backgroundColor: \"#f4f3ef\",\n          padding: \"50px\",\n          width: \"100vw\",\n          minHeight: \"100vh\",\n          display: \"flex\",\n          alignContent: \"stretch\",\n          alignItems: \"center\",\n        }}\n      >\n        {loading ? <Spinner /> : <EditableTable data={data} />}\n      </Content>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { DataContextProvider } from \"./context/DataContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <DataContextProvider>\n        <App />\n      </DataContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}